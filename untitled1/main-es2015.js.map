{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chart/chart.component.ts","./src/app/chart/chart.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, NgModule, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\nimport { EChartsOption } from 'echarts';\r\nimport {MatTab} from '@angular/material/tabs';\r\nimport { observable, computed } from 'mobx-angular';\r\nimport {MatToolbar} from '@angular/material/toolbar';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\n// @NgModule({\r\n//   imports: [MobxAngularModule]\r\n// })\r\nexport class AppComponent implements OnInit{\r\n\r\n  station = '';\r\n  state = '';\r\n  river = '';\r\n\r\n\r\n  arrRivers: string [];\r\n  filteredArrRivers: string[] = ['rzeka'];\r\n  displayedColumns: string[] = ['stacja', 'rzeka', 'stan', 'temp', 'data'];\r\n\r\n  stationOptions: string[] = [];\r\n  stateOptions: string[] = [];\r\n  riverOptions: string[] = [];\r\n  riverFilteredOptions: string[] = [];\r\n  dataSource: MatTableDataSource<string>;\r\n\r\n  constructor(private httpService: HttpClient) { }\r\n  inputStation(station: string) {\r\n    this.station = station;\r\n  }\r\n  inputState(state: any) {\r\n    this.state = state;\r\n  }\r\n  inputRiver(river: any) {\r\n    this.river = river;\r\n  }\r\n  ngOnInit(){\r\n    this.fillOptions();\r\n    this.subscribeApi();\r\n    console.log(this.subscribeApi());\r\n\r\n  }\r\n  fillOptions(){\r\n    this.riverOptions = [];\r\n    this.httpService.get('https://danepubliczne.imgw.pl/api/data/hydro/',{\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    }).subscribe(\r\n      data => {\r\n        this.arrRivers = data as string [];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i = 0; i < this.arrRivers.length; i++) {\r\n          // @ts-ignore\r\n          if (!this.stationOptions.includes(this.arrRivers[i].stacja)) {\r\n            // @ts-ignore\r\n            this.stationOptions.push(this.arrRivers[i].stacja);\r\n          }\r\n          // @ts-ignore\r\n          if (!this.stateOptions.includes(this.arrRivers[i].województwo)) {\r\n            // @ts-ignore\r\n            this.stateOptions.push(this.arrRivers[i].województwo);\r\n          }\r\n          // @ts-ignore\r\n          if (!this.riverOptions.includes(this.arrRivers[i].rzeka) && this.arrRivers[i].województwo === this.state) {\r\n            console.log(this.state);\r\n            // @ts-ignore\r\n            this.riverOptions.push(this.arrRivers[i].rzeka);\r\n          }\r\n        }\r\n        this.stateOptions.sort((a, b) => a.localeCompare(b));\r\n        this.riverOptions.sort((a, b) => a.localeCompare(b));\r\n      }\r\n    );\r\n  }\r\n  subscribeApi(): string[]{\r\n    let returnData: string[];\r\n    this.httpService.get('./assets/json/response.json').subscribe(\r\n      data => {\r\n        returnData = data as string[];\r\n        console.log(data as string[]);\r\n      }\r\n    );\r\n    return returnData;\r\n  }\r\n  searchRiver() {\r\n    this.dataSource = new MatTableDataSource([]);\r\n    this.filteredArrRivers = [];\r\n    this.httpService.get('https://danepubliczne.imgw.pl/api/data/hydro/', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).subscribe(\r\n      data => {\r\n        this.arrRivers = data as string[];\r\n      }\r\n    );\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.arrRivers.length; i++){\r\n      // @ts-ignore\r\n      if (this.state === this.arrRivers[i].województwo && this.river === this.arrRivers[i].rzeka){\r\n        this.filteredArrRivers.push(this.arrRivers[i]);\r\n      }\r\n    }\r\n    this.dataSource = new MatTableDataSource(this.filteredArrRivers);\r\n    console.log();\r\n    }\r\n  }\r\n\r\n\r\n","<!--The content below is only a placeholder and can be replaced.-->\r\n<meta charset=\"UTF-8\">\r\n\r\n<mat-toolbar>\r\n\r\n  <span>RiverStatusPoland</span>\r\n\r\n  <span class=\"items\"> ITEMS </span>\r\n\r\n</mat-toolbar>\r\n{{this.state}}\r\n<mat-form-field [style.width.%]=\"100\"  >\r\n  <mat-autocomplete #stateAutoComplete=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of stateOptions\" [value]=\"option\">{{option}}</mat-option>\r\n  </mat-autocomplete>\r\n\r\n  <mat-label>Wybierz województwo </mat-label>\r\n  <label>\r\n    <input matInput [(ngModel)]=\"state\" [matAutocomplete]=\"stateAutoComplete\" name=\"inputState\">\r\n  </label>\r\n</mat-form-field>\r\n\r\n<mat-form-field [style.width.%]=\"100\" (click)=\"this.fillOptions()\" >\r\n  <mat-autocomplete #riverAutoComplete=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of riverOptions\" [value]=\"option\">{{option}}</mat-option>\r\n  </mat-autocomplete>\r\n\r\n  <mat-label>Wybierz rzeke</mat-label>\r\n  <label>\r\n    <input matInput [(ngModel)]=\"river\" [matAutocomplete]=\"riverAutoComplete\" name=\"inputState\">\r\n  </label>\r\n</mat-form-field>\r\n\r\n<div class=\"mat-display-1\">\r\n\r\n    <p>Źródłem pochodzenia danych jest Instytut Meteorologii i Gospodarki Wodnej – Państwowy Instytut Badawczy\r\n    </p>\r\n    <p>Dane Instytutu Meteorologii i Gospodarki Wodnej – Państwowego Instytutu Badawczego zostały przetworzone\r\n    </p>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"button-search\"> <button  (click)=\"searchRiver()\" mat-button class=\"searchButton\"> Szukaj! </button> </div>\r\n\r\n<mat-tab-group class=\"mat-elevation-z2\">\r\n  <mat-tab label=\"Dane\" >\r\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z2\" matSort>\r\n        <ng-container matColumnDef=\"stacja\" >\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Stacja </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.stacja}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"rzeka\" >\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Rzeka </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.rzeka}} </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"stan\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Stan </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.stan_wody}} cm </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"temp\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Temperatura** </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.temperatura_wody}}  </mat-cell>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"data\">\r\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Data pomiaru </mat-header-cell>\r\n          <mat-cell *matCellDef=\"let row\"> {{row.stan_wody_data_pomiaru}}  </mat-cell>\r\n        </ng-container>\r\n\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n        </mat-row>\r\n\r\n      </table>\r\n\r\n\r\n\r\n\r\n  </mat-tab>\r\n  <mat-tab label=\"Wykres\">\r\n\r\n    <app-chart></app-chart>\r\n\r\n  </mat-tab>\r\n</mat-tab-group>\r\n\r\n\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {NgxEchartsModule} from 'ngx-echarts';\nimport { ChartComponent } from './chart/chart.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChartComponent\r\n  ],\r\n    imports: [\r\n        BrowserModule,\r\n        MatFormFieldModule,\r\n        BrowserAnimationsModule,\r\n        MatInputModule,\r\n        FormsModule,\r\n        MatButtonModule,\r\n        HttpClientModule,\r\n        MatAutocompleteModule,\r\n        MatTableModule,\r\n        MatSortModule,\r\n        MatToolbarModule,\r\n        MatTabsModule,\r\n        NgxEchartsModule.forRoot({\r\n          echarts: () => import('echarts'),\r\n        }),\r\n    ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n\n  private echartsInstance: any;\n  constructor() { }\n\n  initOpts = {\n    renderer: 'svg',\n    width: 300,\n    height: 300\n  };\n\n  options = {\n    color: ['#3398DB'],\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    },\n    grid: {\n      left: '3%',\n      right: '4%',\n      bottom: '3%',\n      containLabel: true\n    },\n    xAxis: [\n      {\n        type: 'category',\n        data: 'tr',\n        axisTick: {\n          alignWithLabel: true\n        }\n      }\n    ],\n    yAxis: [{\n      type: 'value'\n    }],\n    series: [{\n      name: 'Counters',\n      type: 'bar',\n      barWidth: '60%',\n      data: null,\n    }]\n  };\n  ngOnInit(): void {\n\n  }\n  onChartInit(ec) {\n    this.echartsInstance = ec;\n  }\n\n}\n","<echarts class=\"river-chart\" [initOpts]=\"initOpts\" [options]=\"options\" (chartInit)=\"onChartInit($event)\"></echarts>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}